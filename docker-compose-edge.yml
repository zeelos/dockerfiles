# zeelos - edge
# MAINTAINER zeelos.io - https://zeelos.io

version: '3'

services:

  zookeeper-edge:
    image: confluentinc/cp-zookeeper:4.0.0
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    environment:
      - ZOOKEEPER_CLIENT_PORT=2171
      - ZOOKEEPER_TICK_TIME=2000
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9575
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    networks:
      - edgenet
      - cloudnet
    ports:
      - 2171:2171
      - 9575:9575
    deploy:
      placement:
        constraints:
          - node.labels.type == server1
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "ZooKeeper - An open-source server which enables highly reliable distributed coordination"

  kafka-edge:
    image: confluentinc/cp-kafka:4.0.0
    volumes:
      - kafka-data:/var/lib/kafka/data
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-edge:2171
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-edge:9082
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms512M
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9571
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    networks:
      - edgenet
      - cloudnet
    ports:
      - 9082:9082
      - 9571:9571
    deploy:
      placement:
        constraints:
          - node.labels.type == server1
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Kafka - A distributed streaming platform"

  schema-registry-edge:
    image: confluentinc/cp-schema-registry:4.0.0
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry-edge
      - SCHEMA_REGISTRY_LISTENERS=http://0.0.0.0:8071
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper-cloud:2181
      - SCHEMA_REGISTRY_MASTER_ELIGIBILIY=false
      - SCHEMA_REGISTRY_ZK_NAMESPACE=zeelos
      - SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - SCHEMA_REGISTRY_JMX_HOSTNAME=localhost
      - SCHEMA_REGISTRY_JMX_PORT=9572
      - SCHEMA_REGISTRY_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    networks:
      - edgenet
      - cloudnet
    ports:
      - 8071:8071
      - 9572:9572
    deploy:
      placement:
        constraints:
          - node.labels.type == server1
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Schema Registry - Schema registry for Apache Kafka"

  kafka-rest-edge:
    image: confluentinc/cp-kafka-rest:4.0.0
    environment:
      - KAFKA_REST_HOST_NAME=kafka-rest-edge
      - KAFKA_REST_LISTENERS=http://0.0.0.0:8072
      - KAFKA_REST_ZOOKEEPER_CONNECT=zookeeper-edge:2171
      - KAFKA_REST_BOOTSTRAP_SERVERS=kafka-edge:9082
      - KAFKA_REST_SCHEMA_REGISTRY_URL=http://schema-registry-edge:8071
      - KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS=30000
      - KAFKAREST_HEAP_OPTS=-Xmx64M -Xms64M
      - KAFKAREST_JMX_OPTS=-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9573 -Dcom.sun.management.jmxremote.port=9573 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    networks:
      - edgenet
      - cloudnet
    ports:
      - 8072:8072
      - 9573:9573
    deploy:
      placement:
        constraints:
          - node.labels.type == server1
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Kafka REST Proxy - A RESTful interface to a Kafka cluster"

  kafka-mirrormaker:
    image: zeelos/kafka-mirrormaker:0.1-SNAPSHOT
    environment:
      - MIRRORMAKER_WHITE_LIST=^server1_management_req
      - MIRRORMAKER_ABORT_ON_SEND_FAILURE=true
      - MIRRORMAKER_OFFSET_COMMIT_INTERVAL=60000
      - MIRRORMAKER_NUM_STREAMS=1
      - CONSUMER_BOOTSTRAP_SERVERS=kafka-cloud:9092
      - CONSUMER_GROUP_ID=mirrormaker_server1
      - CONSUMER_AUTO_OFFSET_RESET=earliest
      - PRODUCER_BOOTSTRAP_SERVERS=kafka-edge:9082
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9564
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    networks:
      - edgenet
      - cloudnet
    ports:
      - 9564:9564
    deploy:
      placement:
        constraints:
          - node.labels.type == server1
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Kafka MirrorMaker - A stand-alone tool for copying data between two Apache Kafka clusters"

  leshan-server-kafka:
    image: zeelos/leshan-server-kafka:0.1-SNAPSHOT
    volumes:
      - leshan-server-data:/opt/leshan-server-kafka
    environment:
      - SERVERID=server1
      - KAFKA_BOOTSTRAP_SERVER=kafka-edge:9082
      - KAFKA_SCHEMA_REGISTRY_URL=http://schema-registry-edge:8071
      - JAVA_OPTS=-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.rmi.port=9590 -Dcom.sun.management.jmxremote.port=9590 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Xmx512M -Xms512M
    networks:
      - edgenet
    ports:
      - 5683:5683/udp
      - 5684:5684/udp
      - 8080:8080
      - 9590:9590
    deploy:
      placement:
        constraints:
          - node.labels.type == server1
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Leshan - OMA Lightweight M2M server and client in Java"

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  leshan-server-data:

networks:
  edgenet:
    external:
      name: edgenet_server1
  cloudnet:
    external:
      name: cloudnet
