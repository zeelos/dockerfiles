# zeelos - cloud
# MAINTAINER zeelos.io - https://zeelos.io

version: '3.6'

services:

  zookeeper-cloud:
    image: confluentinc/cp-zookeeper:4.1.1
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - KAFKA_OPTS=-javaagent:/etc/kafka/prometheus/jmx_prometheus_javaagent.jar=8080:/etc/kafka/prometheus/jmx-exporter-zookeeper-config.yml
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9585
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                       -Dcom.sun.management.jmxremote.ssl=false
    networks:
      - cloudnet
      - edgenet
    ports:
      - 2181:2181
      - 9585:9585
    configs:
      - source: kafka.jmx-exporter-javaagent-jar
        target: /etc/kafka/prometheus/jmx_prometheus_javaagent.jar
      - source: kafka.jmx-exporter-zookeeper-config
        target: /etc/kafka/prometheus/jmx-exporter-zookeeper-config.yml
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "ZooKeeper - An open-source server which enables highly reliable distributed coordination"

  kafka-cloud:
    image: confluentinc/cp-kafka:4.1.1
    volumes:
      - kafka-data:/var/lib/kafka/data
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper-cloud:2181
      - KAFKA_ADVERTISED_LISTENERS=SSL://kafka-cloud:9092
      - KAFKA_OPTS=-javaagent:/etc/kafka/prometheus/jmx_prometheus_javaagent.jar=8080:/etc/kafka/prometheus/jmx-exporter-kafka-config.yml
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9581
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                       -Dcom.sun.management.jmxremote.ssl=false
      - KAFKA_INTER_BROKER_LISTENER_NAME=SSL
      - KAFKA_SSL_KEYSTORE_FILENAME=kafka.kafka-cloud.keystore.jks
      - KAFKA_SSL_KEYSTORE_CREDENTIALS=kafka-cloud_keystore_creds
      - KAFKA_SSL_KEY_CREDENTIALS=kafka-cloud_sslkey_creds
      - KAFKA_SSL_TRUSTSTORE_FILENAME=kafka.kafka-cloud.truststore.jks
      - KAFKA_SSL_TRUSTSTORE_CREDENTIALS=kafka-cloud_truststore_creds
      - KAFKA_SSL_CLIENT_AUTH=required
      - KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM:HTTPS
    configs:
      - source: kafka.jmx-exporter-javaagent-jar
        target: /etc/kafka/prometheus/jmx_prometheus_javaagent.jar
      - source: kafka.jmx-exporter-kafka-config
        target: /etc/kafka/prometheus/jmx-exporter-kafka-config.yml
    secrets:
      - source: kafka.kafka-cloud.keystore.jks
        target: /etc/kafka/secrets/kafka.kafka-cloud.keystore.jks
      - source: kafka-cloud_keystore_creds
        target: /etc/kafka/secrets/kafka-cloud_keystore_creds
      - source: kafka-cloud_sslkey_creds
        target: /etc/kafka/secrets/kafka-cloud_sslkey_creds
      - source: kafka.kafka-cloud.truststore.jks
        target: /etc/kafka/secrets/kafka.kafka-cloud.truststore.jks
      - source: kafka-cloud_truststore_creds
        target: /etc/kafka/secrets/kafka-cloud_truststore_creds
    networks:
      - cloudnet
      - edgenet
    ports:
      - 9092:9092
      - 9581:9581
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Kafka - A distributed streaming platform"

  schema-registry-cloud:
    image: confluentinc/cp-schema-registry:4.1.1
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry-cloud
      - SCHEMA_REGISTRY_LISTENERS=https://0.0.0.0:8081
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=SSL://kafka-cloud:9092
      - SCHEMA_REGISTRY_MASTER_ELIGIBILIY=true
      - SCHEMA_REGISTRY_SCHEMA_REGISTRY_GROUP_ID=zeelos
      - SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - SCHEMA_REGISTRY_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - SCHEMA_REGISTRY_JMX_HOSTNAME=localhost
      - SCHEMA_REGISTRY_JMX_PORT=9582
      - SCHEMA_REGISTRY_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                                 -Dcom.sun.management.jmxremote.ssl=false
      - SCHEMA_REGISTRY_KAFKASTORE_SECURITY_PROTOCOL=SSL
      - SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.schema-registry-cloud.truststore.jks
      - SCHEMA_REGISTRY_KAFKASTORE_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.schema-registry-cloud.keystore.jks
      - SCHEMA_REGISTRY_KAFKASTORE_SSL_KEYSTORE_PASSWORD=itsasecret
      - SCHEMA_REGISTRY_KAFKASTORE_SSL_KEY_PASSWORD=itsasecret
      - SCHEMA_REGISTRY_KAFKASTORE_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=HTTPS
      - SCHEMA_REGISTRY_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.schema-registry-cloud.truststore.jks
      - SCHEMA_REGISTRY_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - SCHEMA_REGISTRY_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.schema-registry-cloud.keystore.jks
      - SCHEMA_REGISTRY_SSL_KEYSTORE_PASSWORD=itsasecret
      - SCHEMA_REGISTRY_SSL_KEY_PASSWORD=itsasecret
      - SCHEMA_REGISTRY_SSL_CLIENT_AUTH=true
      - SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL=https
      - SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL=INFO
    secrets:
      - source: kafka.schema-registry-cloud.keystore.jks
        target: /etc/kafka/secrets/kafka.schema-registry-cloud.keystore.jks
      - source: kafka.schema-registry-cloud.truststore.jks
        target: /etc/kafka/secrets/kafka.schema-registry-cloud.truststore.jks
    networks:
      - cloudnet
    ports:
      - 8081:8081
      - 9582:9582
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Schema Registry - Schema registry for Apache Kafka"

  kafka-connect-cloud:
    image: zeelos/kafka-connect-leshan-influxdb:0.1-SNAPSHOT
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka-cloud:9092
      - CONNECT_LISTENERS=https://0.0.0.0:8083
      - CONNECT_GROUP_ID=zeelos-connect-group
      - CONNECT_CONFIG_STORAGE_TOPIC=zeelos-connect-configs-cloud
      - CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_STORAGE_TOPIC=zeelos-connect-offsets-cloud
      - CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_OFFSET_FLUSH_INTERVAL_MS=10000
      - CONNECT_STATUS_STORAGE_TOPIC=zeelos-connect-status-cloud
      - CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1
      - CONNECT_KEY_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL=https://schema-registry-cloud:8083
      - CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter
      - CONNECT_VALUE_CONVERTER_ENHANCED_AVRO_SCHEMA_SUPPORT=true
      - CONNECT_VALUE_CONVERTER_CONNECT_META_DATA=false
      - CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL=https://schema-registry-cloud:8083
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect-cloud
      - CONNECT_REST_ADVERTISED_PORT=8083
      - CONNECT_REST_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - CONNECT_REST_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - CONNECT_ZOOKEEPER_CONNECT=zookeeper-cloud:2181
      - CONNECT_LOG4J_ROOT_LOGLEVEL=INFO
      - CONNECT_LOG4J_LOGGERS=io.zeelos.leshan=DEBUG,com.datamountaineer=DEBUG,io.confluent.connect.replicator=DEBUG
      - CONNECT_PLUGIN_PATH=/opt/connectors,/usr/share/java/kafka-connect-elasticsearch,/usr/share/java/kafka-connect-jdbc
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9584
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                       -Dcom.sun.management.jmxremote.ssl=false
      - CONNECT_SECURITY_PROTOCOL=SSL
      - CONNECT_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.connect-cloud.truststore.jks
      - CONNECT_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - CONNECT_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.connect-cloud.keystore.jks
      - CONNECT_SSL_KEYSTORE_PASSWORD=itsasecret
      - CONNECT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=HTTPS
      - CONNECT_SSL_CLIENT_AUTH=true
      - CONNECT_PRODUCER_SECURITY_PROTOCOL=SSL
      - CONNECT_PRODUCER_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.connect-cloud.truststore.jks
      - CONNECT_PRODUCER_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - CONNECT_PRODUCER_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.connect-cloud.keystore.jks
      - CONNECT_PRODUCER_SSL_KEYSTORE_PASSWORD=itsasecret
      - CONNECT_PRODUCER_SSL_KEY_PASSWORD=itsasecret
      - CONNECT_CONSUMER_SECURITY_PROTOCOL=SSL
      - CONNECT_CONSUMER_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.connect-cloud.truststore.jks
      - CONNECT_CONSUMER_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - CONNECT_CONSUMER_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.connect-cloud.keystore.jks
      - CONNECT_CONSUMER_SSL_KEYSTORE_PASSWORD=itsasecret
      - CONNECT_CONSUMER_SSL_KEY_PASSWORD=itsasecret
      - KAFKA_OPTS=-Djavax.net.ssl.trustStore=/etc/kafka/secrets/kafka.connect-cloud.truststore.jks
                   -Djavax.net.ssl.trustStorePassword=itsasecret
                   -Djavax.net.ssl.keyStore=/etc/kafka/secrets/kafka.connect-cloud.keystore.jks
                   -Djavax.net.ssl.keyStorePassword=itsasecret
      - SCHEMA_REGISTRY_OPTS=-Djavax.net.ssl.trustStore=/etc/kafka/secrets/kafka.connect-cloud.truststore.jks
                             -Djavax.net.ssl.trustStorePassword=itsasecret
                             -Djavax.net.ssl.keyStore=/etc/kafka/secrets/kafka.connect-cloud.keystore.jks
                             -Djavax.net.ssl.keyStorePassword=itsasecret
    secrets:
      - source: kafka.connect-cloud.keystore.jks
        target: /etc/kafka/secrets/kafka.connect-cloud.keystore.jks
      - source: kafka.connect-cloud.truststore.jks
        target: /etc/kafka/secrets/kafka.connect-cloud.truststore.jks
    networks:
      - cloudnet
    ports:
      - 8083:8083
      - 9584:9584
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Connect - Your hub for connecting Apache Kafka to all your systems"

  kafka-rest-cloud:
    image: confluentinc/cp-kafka-rest:4.1.1
    environment:
      - KAFKA_REST_HOST_NAME=kafka-rest-cloud
      - KAFKA_REST_LISTENERS=https://0.0.0.0:8082
      - KAFKA_REST_ZOOKEEPER_CONNECT=zookeeper-cloud:2181
      - KAFKA_REST_BOOTSTRAP_SERVERS=kafka-cloud:9092
      - KAFKA_REST_SCHEMA_REGISTRY_URL=https://schema-registry-cloud:8081
      - KAFKA_REST_ACCESS_CONTROL_ALLOW_METHODS=GET,POST,PUT,DELETE,OPTIONS
      - KAFKA_REST_ACCESS_CONTROL_ALLOW_ORIGIN=*
      - KAFKA_REST_CONSUMER_REQUEST_TIMEOUT_MS=30000
      - KAFKA_REST_JMX_HOSTNAME=localhost
      - KAFKA_REST_JMX_PORT=9583
      - KAFKA_REST_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                            -Dcom.sun.management.jmxremote.ssl=false
      - KAFKA_REST_CLIENT_SECURITY_PROTOCOL=SSL
      - KAFKA_REST_CLIENT_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.rest-cloud.truststore.jks
      - KAFKA_REST_CLIENT_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - KAFKA_REST_CLIENT_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.rest-cloud.keystore.jks
      - KAFKA_REST_CLIENT_SSL_KEYSTORE_PASSWORD=itsasecret
      - KAFKA_REST_CLIENT_SSL_KEY_PASSWORD=itsasecret
      - KAFKA_REST_CLIENT_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM=HTTPS
      - KAFKA_REST_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.rest-cloud.truststore.jks
      - KAFKA_REST_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - KAFKA_REST_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.rest-cloud.keystore.jks
      - KAFKA_REST_SSL_KEYSTORE_PASSWORD=itsasecret
      - KAFKA_REST_SSL_KEY_PASSWORD=itsasecret
      - KAFKA_REST_SSL_CLIENT_AUTH=true
    secrets:
      - source: kafka.rest-cloud.keystore.jks
        target: /etc/kafka/secrets/kafka.rest-cloud.keystore.jks
      - source: kafka.rest-cloud.truststore.jks
        target: /etc/kafka/secrets/kafka.rest-cloud.truststore.jks
    networks:
      - cloudnet
    ports:
      - 8082:8082
      - 9583:9583
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Kafka REST Proxy - A RESTful interface to a Kafka cluster"

  kafka-mirrormaker:
    image: zeelos/kafka-mirrormaker:4.1.1
    environment:
      - MIRRORMAKER_WHITE_LIST=^server1_((?!req).)*$$
      - MIRRORMAKER_ABORT_ON_SEND_FAILURE=true
      - MIRRORMAKER_OFFSET_COMMIT_INTERVAL_MS=60000
      - MIRRORMAKER_NUM_STREAMS=1
      - CONSUMER_BOOTSTRAP_SERVERS=kafka-edge:9082
      - CONSUMER_GROUP_ID=mirrormaker_server1
      - CONSUMER_AUTO_OFFSET_RESET=earliest
      - PRODUCER_BOOTSTRAP_SERVERS=kafka-cloud:9092
      - KAFKA_JMX_HOSTNAME=localhost
      - KAFKA_JMX_PORT=9574
      - KAFKA_JMX_OPTS=-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                       -Dcom.sun.management.jmxremote.ssl=false
      - PRODUCER_SECURITY_PROTOCOL=SSL
      - PRODUCER_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.client-cloud.truststore.jks
      - PRODUCER_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - PRODUCER_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.client-cloud.keystore.jks
      - PRODUCER_SSL_KEYSTORE_PASSWORD=itsasecret
      - PRODUCER_SSL_KEY_PASSWORD=itsasecret
      - CONSUMER_SECURITY_PROTOCOL=SSL
      - CONSUMER_SSL_TRUSTSTORE_LOCATION=/etc/kafka/secrets/kafka.client-edge.truststore.jks
      - CONSUMER_SSL_TRUSTSTORE_PASSWORD=itsasecret
      - CONSUMER_SSL_KEYSTORE_LOCATION=/etc/kafka/secrets/kafka.client-edge.keystore.jks
      - CONSUMER_SSL_KEYSTORE_PASSWORD=itsasecret
      - CONSUMER_SSL_KEY_PASSWORD=itsasecret
    secrets:
      - source: kafka.client-cloud.keystore.jks
        target: /etc/kafka/secrets/kafka.client-cloud.keystore.jks
      - source: kafka.client-cloud.truststore.jks
        target: /etc/kafka/secrets/kafka.client-cloud.truststore.jks
      - source: kafka.client-edge.keystore.jks
        target: /etc/kafka/secrets/kafka.client-edge.keystore.jks
      - source: kafka.client-edge.truststore.jks
        target: /etc/kafka/secrets/kafka.client-edge.truststore.jks
      - source: client_security_cloud.properties
        target: /etc/kafka/secrets/client_security_cloud.properties
      - source: client_security_edge.properties
        target: /etc/kafka/secrets/client_security_edge.properties
    networks:
      - cloudnet
      - edgenet
    ports:
      - 9574:9574
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Kafka MirrorMaker - A stand-alone tool for copying data between two Apache Kafka clusters"

  orientdb:
    image: zeelos/orientdb:3.0.1-tp3-with-zeelosdb
    volumes:
      - orientdb-data:/orientdb/databases
    environment:
      - ORIENTDB_ROOT_PASSWORD=secret
      - ORIENTDB_OPTS_MEMORY=-Xms512m -Xmx512m
      - JAVA_OPTS=-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.local.only=false
                  -Dcom.sun.management.jmxremote.rmi.port=9450 -Dcom.sun.management.jmxremote.port=9450
                  -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false
                  -Dcom.sun.management.jmxremote.ssl=false
      - ORIENTDB_SETTINGS=-Dstorage.diskCache.bufferSize=2048 -Dmemory.chunk.size=2048 -DridBag.embeddedToSbtreeBonsaiThreshold=-1
    networks:
      - cloudnet
    ports:
      - 2424:2424
      - 2480:2480
      - 9450:9450
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "OrientDB - Distributed Multi-Model and Graph Database"

  influxdb:
    image: zeelos/influxdb:1.5.2-with-zeelosdb
    volumes:
      - influxdb-data:/var/lib/influxdb
    environment:
      -  INFLUXDB_HTTP_AUTH_ENABLED=true
    networks:
      - cloudnet
    ports:
      - 8086:8086
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "InfluxDB - The Platform for Time-Series Data"

  grafana:
    image: zeelos/grafana:5.1.3-influx-with-zeelosdb
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
      - GF_INSTALL_PLUGINS=natel-discrete-panel
    networks:
      - cloudnet
    ports:
      - 3000:3000
    user: "472"
    deploy:
      placement:
        constraints:
          - node.labels.type == cloud
    labels:
      io.zeelos.app: "zeelos"
      io.zeelos.role: "Grafana - Beautiful metric & analytic dashboards"

configs:
  kafka.jmx-exporter-javaagent-jar:
    file: ./configs/prometheus/exporters/kafka/jmx_prometheus_javaagent-0.3.1.jar
  kafka.jmx-exporter-zookeeper-config:
    file: ./configs/prometheus/exporters/kafka/jmx-exporter-zookeeper-config.yml
  kafka.jmx-exporter-kafka-config:
    file: ./configs/prometheus/exporters/kafka/jmx-exporter-kafka-config.yml

secrets:
  kafka.kafka-cloud.keystore.jks:
    file: ./security/kafka.kafka-cloud.keystore.jks
  kafka-cloud_keystore_creds:
    file: ./security/kafka-cloud_keystore_creds
  kafka-cloud_sslkey_creds:
    file: ./security/kafka-cloud_sslkey_creds
  kafka.kafka-cloud.truststore.jks:
    file: ./security/kafka.kafka-cloud.truststore.jks
  kafka-cloud_truststore_creds:
    file: ./security/kafka-cloud_truststore_creds
  kafka.schema-registry-cloud.keystore.jks:
    file: ./security/kafka.schema-registry-cloud.keystore.jks
  kafka.schema-registry-cloud.truststore.jks:
    file: ./security/kafka.schema-registry-cloud.truststore.jks
  kafka.connect-cloud.keystore.jks:
    file: ./security/kafka.connect-cloud.keystore.jks
  kafka.connect-cloud.truststore.jks:
    file: ./security/kafka.connect-cloud.truststore.jks
  kafka.rest-cloud.keystore.jks:
    file: ./security/kafka.rest-cloud.keystore.jks
  kafka.rest-cloud.truststore.jks:
    file: ./security/kafka.rest-cloud.truststore.jks
  kafka.client-cloud.keystore.jks:
    file: ./security/kafka.client-cloud.keystore.jks
  kafka.client-cloud.truststore.jks:
    file: ./security/kafka.client-cloud.truststore.jks
  kafka.client-edge.keystore.jks:
    file: ./security/kafka.client-edge.keystore.jks
  kafka.client-edge.truststore.jks:
    file: ./security/kafka.client-edge.truststore.jks
  client_security_cloud.properties:
    file: ./security/client_security_cloud.properties
  client_security_edge.properties:
    file: ./security/client_security_edge.properties

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  orientdb-data:
  influxdb-data:
  grafana-data:

networks:
  cloudnet:
    external: true
    name: cloudnet
  edgenet:
    external: true
    name: edgenet_server1
